;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-jinghua" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M270.336 436.69504l61.99296 0 0-175.49312 59.00288 0 0 175.49312 55.5008 0 0 53.00224-55.5008 0 0 52.98176 20.50048-19.47648c21.34016 20.31616 41.00096 40.16128 59.00288 59.47392l-39.99744 38.99392c-9.66656-12.16512-22.8352-27.40224-39.50592-45.73184l0 174.73536-59.00288 0L332.32896 597.1968c-15.33952 36.00384-31.8464 66.99008-49.50016 92.99968-5.67296-20.992-12.67712-45.83424-20.992-74.52672 23.83872-31.47776 46.32576-73.48224 67.50208-125.99296L270.336 489.6768 270.336 436.69504zM303.84128 298.68032c9.99424 37.33504 18.49344 70.67648 25.4976 100.00384l-39.50592 12.4928c-7.00416-32.6656-15.33952-66.1504-25.00608-100.49536L303.84128 298.68032zM422.83008 298.68032l40.50944 12.4928c-9.66656 32.99328-20.50048 66.49856-32.50176 100.49536l-37.00736-13.49632L422.83008 298.68032zM456.84736 428.19584l119.00928 0 0-21.99552-99.00032 0 0-43.008 99.00032 0L575.85664 341.1968l-108.99456 0 0-43.008 108.99456 0 0-39.99744 65.00352 0 0 39.99744 115.5072 0 0 43.008-115.5072 0 0 21.99552 104.50944 0 0 43.008-104.50944 0 0 21.99552 123.4944 0 0 43.008L456.84736 471.20384 456.84736 428.19584zM540.34432 749.6704l-61.00992 0 0-259.4816 262.49216 0 0 188.49792c0 22.8352-4.75136 39.99744-14.2336 51.52768-9.5232 11.48928-23.04 17.36704-40.63232 17.6128-17.57184 0.24576-44.9536 0.38912-82.1248 0.38912-2.99008-15.33952-7.33184-32.52224-13.0048-51.52768 34.83648 2.00704 57.15968 2.99008 66.99008 2.99008 14.66368 0 21.99552-8.31488 21.99552-25.00608l0-6.47168-140.4928 0L540.32384 749.6704zM680.83712 537.1904l-140.4928 0 0 24.00256 140.4928 0L680.83712 537.1904zM540.34432 626.688l140.4928 0 0-24.00256-140.4928 0L540.34432 626.688z"  ></path>' +
    '' +
    '<path d="M512 0C229.23264 0 0 229.23264 0 512c0 282.76736 229.23264 512 512 512 282.76736 0 512-229.23264 512-512C1024 229.23264 794.76736 0 512 0L512 0zM512 956.17024c-245.30944 0-444.17024-198.8608-444.17024-444.17024S266.69056 67.85024 512 67.85024 956.17024 266.69056 956.17024 512 757.30944 956.17024 512 956.17024L512 956.17024z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-appzuixinhuifu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M511.998465 237.046834c-139.970892 0-253.445316 113.473401-253.445316 253.429966 0 139.983171 113.474424 253.411547 253.445316 253.411547s253.444293-113.428376 253.444293-253.411547C765.442758 350.520235 651.969357 237.046834 511.998465 237.046834zM703.26872 526.875802l0 3.91517c0 10.597359-8.595772 19.164478-19.165502 19.164478L515.141038 549.95545l-3.943822 0-0.678452 0c-10.56973 0-19.134803-8.566096-19.134803-19.164478L491.383962 340.076372c0-10.600429 8.565073-19.164478 19.134803-19.164478l4.622274 0c10.599406 0 19.165502 8.56405 19.165502 19.164478L534.30654 507.71644l149.796678 0C694.672948 507.71644 703.26872 516.278443 703.26872 526.875802z"  ></path>' +
    '' +
    '<path d="M511.998465 63.892169c-235.57532 0-426.596911 190.977589-426.596911 426.598958 0 171.242106 100.994182 318.854025 246.604514 386.727878l-33.30657 133.163859c0 0 134.978181-45.01524 198.261483-93.695962 4.991688 0.198521 9.984399 0.36839 15.036461 0.36839 235.57532 0 426.598958-190.96224 426.598958-426.565189C938.597423 254.869758 747.573785 63.892169 511.998465 63.892169zM511.998465 853.308433c-200.419635 0-362.821399-162.42837-362.821399-362.831632 0-200.38996 162.40074-362.837772 362.821399-362.837772 200.418612 0 362.822422 162.447812 362.822422 362.837772C874.819864 690.880063 712.417077 853.308433 511.998465 853.308433z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-zhichizuiduoxianti" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M342.245 580.288c-9.262 0-16.747 7.521-16.747 16.758 0 9.297 7.485 16.756 16.747 16.756 9.188 0 16.709-7.459 16.709-16.756C358.954 587.81 351.432 580.288 342.245 580.288zM342.245 602.673c-3.111 0-5.587-2.572-5.587-5.627 0-3.062 2.476-5.565 5.587-5.565 3.037 0 5.553 2.504 5.553 5.565C347.797 600.101 345.282 602.673 342.245 602.673z"  ></path>' +
    '' +
    '<path d="M492.156 52.476c-215.204 0-389.62 174.418-389.62 389.592 0 215.296 174.416 389.744 389.62 389.744 215.192 0 389.622-174.447 389.622-389.744C881.779 226.894 707.349 52.476 492.156 52.476zM492.156 784.722c-189.209 0-342.562-153.414-342.562-342.653 0-189.18 153.354-342.41 342.562-342.41 189.196 0 342.532 153.23 342.532 342.41C834.689 631.308 681.353 784.722 492.156 784.722z"  ></path>' +
    '' +
    '<path d="M683.786 354.717c-14.87-3.916-43.569-4.588-87.006-5.565l-22.084-0.551c1.529-10.641 1.838-21.774 1.838-37.188 0-51.069-37.651-101.166-75.963-101.166-26.998 0-49.196 22.022-49.545 49.116-0.311 24.83-7.331 69.909-50.823 92.724-1.99 1.04-6.304 3.239-9.63 4.83-8.528-5.749-18.41-8.988-27.711-8.988l-41.289 0c-27.325 0-49.564 22.201-49.564 49.541l0 220.249c0 27.277 22.239 49.482 49.564 49.482l41.289 0c16.572 0 31.657-8.441 40.805-22.389 8.412 2.021 23.749 5.688 54.515 12.782 7.194 1.591 44.926 9.605 84.064 9.605l75.209 0c26.146 0 45.176-10.336 57.088-31.808 0.891-1.896 3.732-7.827 5.975-15.229 2.264-7.1 2.807-15.352 1.588-23.305 13.788-11.681 18.447-27.035 21.312-36.453 4.37-13.822 4.931-26.547 1.682-37.924 8.684-9.904 14.408-22.936 17-38.835 1.896-11.131 0.561-22.633-3.752-32.905 6.247-8.81 9.881-19.514 10.366-30.769l0.058-2.446c0.193-1.952 0.271-3.238 0.271-7.644C729.041 389.516 714.941 363.583 683.786 354.717zM368.469 585.302l0 23.545 0 8.871c0 2.998-2.572 5.506-5.607 5.506l-8.741 0-23.709 0-8.838 0c-3.018 0-5.493-2.45-5.493-5.506l0-8.746 0-23.791L316.081 397.469c0-3.061 2.476-5.564 5.493-5.564l41.289 0c3.092 0 5.607 2.504 5.607 5.564L368.469 585.302 368.469 585.302zM684.948 414.169l-0.214 4.157c-0.097 3.365-0.405 12.169-19.029 12.169l-27.518 0c-8.354 0-15.143 6.794-15.143 15.172 0 8.314 6.786 15.045 15.143 15.045l26.648 0c5.125 0 8.896 1.345 11.178 4.037 2.727 3.239 3.346 8.378 2.766 11.807-2.632 15.959-9.129 22.811-21.699 22.811l-32.624 0c-8.354 0-15.142 6.792-15.142 15.108 0 8.32 6.788 15.109 15.142 15.109l27.096 0c3.674 0 8.47 0.551 10.346 3.117 1.855 2.565 1.701 7.953-0.928 16.211-3.812 12.414-5.918 19.266-27.89 19.266l-22.51 0c-8.334 0-15.143 6.787-15.143 15.104 0 8.383 6.809 15.172 15.143 15.172l21.659 0c3.849 0 4.835 1.344 5.222 1.895 1.529 2.078 1.412 5.691 1.084 6.787-1.393 4.468-2.998 7.892-3.211 8.322-2.185 3.91-5.354 7.769-17.869 7.769l-75.209 0c-33.841 0-67.78-7.033-74.395-8.505-54.496-12.6-59.583-14.067-64.339-15.35-0.04 0-4.796-0.982-4.796-4.037l-0.077-190.094c0-3.062 1.933-5.57 6.555-7.035l2.07-0.734c78.207-32.354 87.411-106.977 87.739-137.556 0.04-1.471 1.103-5.69 5.569-5.69 7.947 0 31.969 23.119 31.969 57.189 0 32.111-1.239 36.758-12.241 69.604l-3.638 10.888 11.431 0c128.717 0 135.08 1.712 146.588 4.83 8.625 2.509 10.383 8.504 10.383 13.149C685.062 412.331 685.005 413.13 684.948 414.169z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-zuixin" viewBox="0 0 1053 1024">' +
    '' +
    '<path d="M527.017273 12.541562c-276.562199 0-500.758291 224.197486-500.758291 500.759684 0 276.564985 224.197486 500.759684 500.759684 500.759684 276.560805 0 500.761078-224.194699 500.761078-500.759684C1027.775565 236.737654 803.576686 12.541562 527.017273 12.541562zM527.017273 979.545861c-257.49908 0-466.243222-208.745535-466.243222-466.246008 0-257.500473 208.744141-466.243222 466.244615-466.243222 257.497687 0 466.244615 208.744141 466.244615 466.243222C993.263282 770.80172 784.516354 979.545861 527.017273 979.545861z"  ></path>' +
    '' +
    '<path d="M852.872185 444.413214c-3.806215-11.829638-14.039249-20.466068-26.399695-22.310661l-186.650819-32.786112-83.502672-167.986155c-5.444615-11.174835-16.82425-18.29686-29.308691-18.29686-12.483048 0-23.82228 7.122024-29.389497 18.29686l-83.459483 167.986155-186.652212 33.89231c-12.320044 1.8432-22.553078 10.478237-26.359293 22.390073-3.888414 11.747439-0.654803 24.761295 8.268626 33.479924l135.037039 124.805399-35.284114 181.327412c-2.08701 12.239238 2.865807 24.761295 13.057045 32.051897 5.648022 4.174019 12.402242 6.300038 19.198259 6.300038 5.198019 0 10.478237-1.26781 15.226253-3.765812l170.318367-83.21428 169.213562 83.21428c4.746623 2.498003 10.07003 3.765812 15.268049 3.765812 6.75422 0 13.548844-2.167815 19.195472-6.300038 10.111826-7.289208 15.229039-19.812659 13.100234-32.051897L709.569306 603.882754l135.078835-125.989616C853.568784 469.258101 856.761992 456.240065 852.872185 444.413214L852.872185 444.413214z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)