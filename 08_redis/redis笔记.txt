# Redis笔记：


### RDB同步机制：
1. 开启和关闭：默认情况下是开启了。如果想关闭，那么注释掉`redis.conf`文件中的所有`save`选项就可以了。
2. 同步机制：
    * save 900 1：如果在900s以内发生了1次数据更新操作，那么就会做一次同步操作。
    * save 300 10：如果在300s以内发生了10数据更新操作，那么就会做一次同步操作。
    * save 60 10000：如果在60s以内发生了10000数据更新操作，那么就会做一次同步操作。
3. 存储内容：具体的值，而是命令。并且是经过压缩后存储进去的。
4. 存储路径：根据`redis.conf`下的`dir`以及`rdbfilename`来指定的。默认是`/var/lib/redis/dump.rdb`。
5. 优点：
    * 存储数据到文件中会进行压缩，文件体积比aof小。
    * 因为存储的是redis具体的值，并且会经过压缩，因此在恢复的时候速度比AOF快。
    * 非常适用于备份。
6. 缺点：
    * RDB在多少时间内发生了多少写操作的时候就会出发同步机制，因为采用压缩机制，RDB在同步的时候都重新保存整个Redis中的数据，因此你一般会设置在最少5分钟才保存一次数据。在这种情况下，一旦服务器故障，会造成5分钟的数据丢失。
    * 在数据保存进RDB的时候，Redis会fork出一个子进程用来同步，在数据量比较大的时候，可能会非常耗时。

### AOF同步机制：
1. 开启和关闭：默认是关闭的。如果想要开启，那么修改redis.conf中的`appendonly yes`就可以了
2. 同步机制：
    * appendfsync always：每次有数据更新操作，都会同步到文件中。
    * appendfsync everysec：每秒进行一次更新。
    * appendfsync no：使用操作系统的方式进行更新。普遍是30s更新一次。
3. 存储内容：存储的是具体的命令。不会进行压缩。
4. 存储路径：根据`redis.conf`下的`dir`以及`appendfilename`来指定的。默认是`/var/lib/redis/appendonly.aof`。
5. 优点：
    * AOF的策略是每秒钟或者每次发生写操作的时候都会同步，因此即使服务器故障，最多只会丢失1秒的数据。 
    * AOF存储的是Redis命令，并且是直接追加到aof文件后面，因此每次备份的时候只要添加新的数据进去就可以了。
    * 如果AOF文件比较大了，那么Redis会进行重写，只保留最小的命令集合。
6. 缺点：
    * AOF文件因为没有压缩，因此体积比RDB大。 
    * AOF是在每秒或者每次写操作都进行备份，因此如果并发量比较大，效率可能有点慢。
    * AOF文件因为存储的是命令，因此在灾难恢复的时候Redis会重新运行AOF中的命令，速度不及RDB。

### 给redis指定密码：
1. 设置密码：在`reids.conf`配置文件中，将`requirepass pasword`取消注释，并且指定你想设置的密码。
2. 使用密码连接reids：
    * 先登录上去，然后再使用`autho password`命令进行授权。
    * 在连接的时候，通过`-a`参数指定密码进行连接。

### 其他机器连接redis：
如果想要让其他机器连接本机的redis服务器，那么应该在`redis.conf`配置文件中，指定`bind 本机的ip地址`。这样别的机器就能连接成功。不像是网上说的，要指定对方的ip地址。





